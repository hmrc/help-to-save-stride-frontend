$black: #0b0c0c;
$grey-8: #DEE0E2;
$text-colour: $black;
$white: #fff;


@mixin border-radius($radius) {
  -webkit-border-radius: $radius; // Chrome 4.0, Safari 3.1 to 4.0, Mobile Safari 3.2, Android Browser 2.1
     -moz-border-radius: $radius; // Firefox 2.0 to 3.6
          border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow; // Chrome 4.0 to 9.0, Safari 3.1 to 5.0, Mobile Safari 3.2 to 4.3, Android Browser 2.1 to 3.0
     -moz-box-shadow: $shadow; // Firefox 3.5 to 3.6
          box-shadow: $shadow;
}

@mixin opacity($trans) {
  zoom: 1;
  filter: unquote('alpha(opacity=' + ($trans * 100) + ')'); // IE6 to IE8
  opacity: $trans;
}

@mixin button($colour: $button-colour) {
  // Colour
  background-color: $colour;

  // Size and shape
  position: relative;
  display: inline-block;
  padding: .526315em .789473em .263157em; // 10px 15px 5px
  border: none;
  outline: 1px solid transparent; // keep some button appearance when changing colour settings in browsers
  outline-offset: -1px; // fixes bug in Safari that outline width on focus is not overwritten, is reset to 0 on focus in govuk_template
  -webkit-appearance: none;

  // Bottom edge effect
  @include box-shadow(0 2px 0 darken($colour, 15%));

  // Text
  font-size: 1em; // inherit from parent
  line-height: 1.25;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;

  // Interaction
  cursor: pointer;

  &:visited {
    background-color: $colour;
  }

  &:hover,
  &:focus {
    background-color: darken($colour, 5%);
  }

  &:active {
    top: 2px;
    @include box-shadow(0 0 0 $colour);
  }

  // Disabled button styles
  &.disabled,
  &[disabled="disabled"],
  &[disabled] {
    @include opacity(0.5);
    &:hover {
      cursor: default;
      background-color: $colour;
    }

    &:active {
      top: 0;
      @include box-shadow(0 2px 0 darken($colour, 15%));
    }
  }

  // Set text colour depending on background colour
  @if lightness($colour) < 50% {
    color: $white;

    &:link,
    &:link:focus,
    &:hover,
    &:focus,
    &:visited {
      color: $white;
    }
  } @else {
    color: $text-colour;

    &:link,
    &:link:focus,
    &:hover,
    &:focus,
    &:visited {
      color: $text-colour;
    }
  }

  // making the click target bigger than the button
  // (and fill the space made when the button moves)
  &:before {
    content: "";
    height: 110%;
    width: 100%;
    display: block;
    background: transparent;
    position: absolute;
    top: 0;
    left: 0;
  }

  &:active:before {
    top: -10%;
    height: 120%;
  }
}



.button--secondary {
  @include button($grey-8);
  // @include core-19();
}